@model DesafioCast.Models.Emprestimo

@{
    ViewData["Title"] = "New";
}

<h2>New</h2>

<h4>Emprestimo</h4>
<hr />
@using (Html.BeginForm("New", "Emprestimo", FormMethod.Post))
{


    <div class="row">
        <div class="col-md-4">
            <form asp-action="New">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="DataEmprestimo" class="control-label"></label>
                    <input asp-for="DataEmprestimo" class="form-control" />
                    <span asp-validation-for="DataEmprestimo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DataDevolucao" class="control-label"></label>
                    <input asp-for="DataDevolucao" class="form-control" />
                    <span asp-validation-for="DataDevolucao" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Livro" class="control-label"></label>
                    <select asp-for="IdLivro" class="form-control" asp-items="ViewBag.IdLivro"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Cliente" class="control-label"></label>
                    <select asp-for="IdCliente" class="form-control" asp-items="ViewBag.IdCliente"></select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Emprestimos">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
}